* problem
Input: A sequence of $n$ numbers $A = (a_1, a_2, \cdots, a_n)$ and a value $v$.
Output: An index $i$ such that $v = A[i]$ or the special value NIL if $v$ does not appear in $A$.


* pseudocode
#+BEGIN_EXAMPLE
BINARY-SEARCH(A, v, low, high)

if low > high
    return NIL
mid = $\lfloor$ (low + high)/2 $\rfloor$
if v == A[mid]
    return mid
elseif v > A[mid]
    return BINARY-SEARCH(A, v, mid+1, high)
else 
    return BINARY-SEARCH(A, v, low, mid-1)
#+END_EXAMPLE



* python
#+BEGIN_SRC python
import numpy as np


def binary_search(lst, v, low, high):
    if low > high:
        return None
    mid = (low + high) // 2
    if v == lst[mid]:
        return mid
    elif v > lst[mid]:
        return binary_search(lst, v, mid + 1, high)
    else:
        return binary_search(lst, v, low, mid - 1)


a = np.arange(1, 100)
print(a)
low = 0
high = len(a) - 1
print(binary_search(a, 10, 0, high))

#+END_SRC


* analysis
worst-case running time: $\Theta(\lg n)$
